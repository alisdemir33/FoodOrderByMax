[{"C:\\AlisRepo\\FoodOrderByMax\\src\\index.js":"1","C:\\AlisRepo\\FoodOrderByMax\\src\\App.js":"2","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Meals\\Meals.js":"3","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\UI\\Modal.js":"4","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Layout\\Header.js":"5","C:\\AlisRepo\\FoodOrderByMax\\src\\store\\CartProvider.js":"6","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Cart\\Cart.js":"7","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Meals\\MealsSummary.js":"8","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Layout\\HeaderCartButton.js":"9","C:\\AlisRepo\\FoodOrderByMax\\src\\store\\CartStore.js":"10","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Meals\\AvailableMeals.js":"11","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Cart\\CartItem.js":"12","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\UI\\Card.js":"13","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Meals\\MealItem\\MealItem.js":"14","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Cart\\CartIcon.js":"15","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Meals\\MealItem\\MealItemForm.js":"16","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\UI\\Input.js":"17","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Layout\\DummyHeaderCartButton.js":"18","C:\\AlisRepo\\FoodOrderByMax\\src\\store\\MealsProvider.js":"19","C:\\AlisRepo\\FoodOrderByMax\\src\\store\\MealsStore.js":"20"},{"size":142,"mtime":1616594953000,"results":"21","hashOfConfig":"22"},{"size":1741,"mtime":1623346946375,"results":"23","hashOfConfig":"22"},{"size":320,"mtime":1623346965893,"results":"24","hashOfConfig":"22"},{"size":842,"mtime":1622655304827,"results":"25","hashOfConfig":"22"},{"size":707,"mtime":1623257676100,"results":"26","hashOfConfig":"22"},{"size":3212,"mtime":1623358789582,"results":"27","hashOfConfig":"22"},{"size":1624,"mtime":1622920850175,"results":"28","hashOfConfig":"22"},{"size":546,"mtime":1622495302363,"results":"29","hashOfConfig":"22"},{"size":1161,"mtime":1622920850201,"results":"30","hashOfConfig":"22"},{"size":193,"mtime":1622656605478,"results":"31","hashOfConfig":"22"},{"size":1454,"mtime":1623346384177,"results":"32","hashOfConfig":"22"},{"size":613,"mtime":1622696817693,"results":"33","hashOfConfig":"22"},{"size":197,"mtime":1622496733355,"results":"34","hashOfConfig":"22"},{"size":1063,"mtime":1622923599282,"results":"35","hashOfConfig":"22"},{"size":531,"mtime":1622494633330,"results":"36","hashOfConfig":"22"},{"size":1397,"mtime":1622923723424,"results":"37","hashOfConfig":"22"},{"size":341,"mtime":1622655657650,"results":"38","hashOfConfig":"22"},{"size":1598,"mtime":1623359543530,"results":"39","hashOfConfig":"22"},{"size":1921,"mtime":1623360145522,"results":"40","hashOfConfig":"22"},{"size":166,"mtime":1623346740886,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"titbye",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\AlisRepo\\FoodOrderByMax\\src\\index.js",[],["91","92"],"C:\\AlisRepo\\FoodOrderByMax\\src\\App.js",[],"C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Meals\\Meals.js",["93"],"import React, { Fragment,useContext } from 'react'\r\nimport AvailableMeals from './AvailableMeals'\r\nimport MealsSummary from './MealsSummary';\r\n\r\n\r\nconst Meals = () => { \r\n\r\n    return <Fragment>\r\n        <MealsSummary> </MealsSummary>\r\n        <AvailableMeals></AvailableMeals>\r\n    </Fragment>\r\n}\r\nexport default Meals;","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\UI\\Modal.js",[],"C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Layout\\Header.js",[],"C:\\AlisRepo\\FoodOrderByMax\\src\\store\\CartProvider.js",["94"],"import React, { useEffect, useReducer } from \"react\";\r\nimport CartContext from \"./CartStore\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n \r\n    if (action.type === \"ADD_ITEM\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.payload.price * action.payload.amount;\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.payload.id\r\n    );\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {//item var ise amount 1 artÄ±yor ve \r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.payload.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else \r\n    {\r\n      updatedItems = state.items.concat(action.payload); //  [...state.items, action.payload];\r\n    }\r\n\r\n    return { items: updatedItems, totalAmount: updatedTotalAmount };\r\n  } \r\n  else if (action.type === \"REMOVE_ITEM\") {   \r\n    \r\n    const id= action.payload;\r\n    const existingCartItemIndex = state.items.findIndex( item =>  item.id === id);\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n    if(existingCartItem){\r\n        \r\n        const updatedTotalAmount = state.totalAmount - existingCartItem.price;\r\n        let updatedItems;\r\n        if(existingCartItem.amount > 1 )\r\n        {\r\n            // amount will be decreased by 1\r\n            const updatedItem ={\r\n                ...existingCartItem, \r\n                amount : existingCartItem.amount-1\r\n            }\r\n            updatedItems =[...state.items];\r\n            updatedItems[existingCartItemIndex]= updatedItem;\r\n           \r\n        }else if(existingCartItem.amount === 1)\r\n        {//item will be removed form 'items.'\r\n             updatedItems = state.items.filter( (item) => { return item.id !== id})           \r\n        }else{\r\n          return  defaultCartState;\r\n        }\r\n        return { items: updatedItems, totalAmount: updatedTotalAmount}\r\n    }else{\r\n        return defaultCartState;\r\n    }\r\n\r\n\r\n  } else {\r\n        return defaultCartState;\r\n  }\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  // const [currentCartList, setCurrentCartList] = useState([]);\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  /*     const onAddToCartHandler = (item) => {   \r\n        let newList= [...currentCartList,item];\r\n        setCurrentCartList(newList);\r\n        };\r\n       */\r\n  const onAddItemHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD_ITEM\", payload: item });\r\n  };\r\n\r\n  const onRemoveItemHandler = (id) => {\r\n   ;debugger\r\n    dispatchCartAction({ type: \"REMOVE_ITEM\", payload: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: onAddItemHandler,\r\n    removeItem: onRemoveItemHandler,\r\n  };\r\n\r\n  console.log('Cart Before Render')\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Cart\\Cart.js",["95"],"import React, { useContext, Fragment } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartContext from \"../../store/CartStore\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst Cart = (props) => {\r\n  const ctx = useContext(CartContext);\r\n\r\n  /*   const list = [\r\n    {\r\n      id: \"c1\",\r\n      name: \"snitzel\",\r\n      price: 3.46,\r\n      amount: 2,\r\n    },\r\n    {\r\n      id: \"c2\",\r\n      name: \"soup\",\r\n      price: 1.4,\r\n      amount: 3,\r\n    },\r\n  ] */\r\n\r\n  const addItemHandler = (item) => {\r\n    ctx.addItem({...item,amount:1});\r\n  };\r\n  const removeItemHandler = (id) => {\r\n    ctx.removeItem(id);\r\n  };\r\n\r\n  const list = ctx.items.map((item) => {\r\n    return (\r\n      <CartItem\r\n        key={item.id}\r\n        onAdd={addItemHandler.bind(null, item)}\r\n        onRemove={removeItemHandler.bind(null, item.id)}\r\n        name={item.name}\r\n        amount={item.amount}\r\n        price={item.price}\r\n      ></CartItem>\r\n    );\r\n  });\r\n\r\n  const ulList = <ul className={classes[\"cart-items\"]}> {list} </ul>;\r\n  const orderButtonVisible = ctx.items.length > 0;\r\n\r\n  return (\r\n    <Fragment>\r\n      {ulList}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{ctx.totalAmount.toFixed(2)}</span>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n          CLOSE\r\n        </button>\r\n        {orderButtonVisible && (\r\n          <button className={classes[\"button\"]}>ORDER</button>\r\n        )}\r\n      </div>{\" \"}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Meals\\MealsSummary.js",[],"C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Layout\\HeaderCartButton.js",["96"],"import React, {useContext,useEffect,useState }from 'react'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport CartIcon, { icon } from '../Cart/CartIcon'\r\nimport CartContext from '../../store/CartStore'\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const[isHighligted,setIsHighligted] = useState(false);\r\n    const ctx = useContext(CartContext);\r\n    const {items} = ctx;\r\n\r\n    useEffect(() => { \r\n       if(items.length === 0){\r\n       return;\r\n    }\r\n        setIsHighligted(true);\r\n       \r\n       \r\n      const timer = setTimeout( () =>{\r\n            setIsHighligted(false);\r\n        },300); \r\n        \r\n        return () =>{\r\n            clearTimeout(timer);\r\n        }\r\n        \r\n    }, [items]);\r\n   \r\n    \r\n\r\n    const btnClasses = `${classes.button} ${ isHighligted ?classes.bump :'' }`\r\n\r\n    return <button onClick={props.onClick} className={btnClasses}>\r\n        <span className={classes.icon}><CartIcon></CartIcon></span>\r\n        <span>Your Cart</span>\r\n        <span className={classes.badge}>{ctx.items.reduce( (currNumber,item)=>{ return  currNumber + item.amount },0)}</span>\r\n    </button>\r\n\r\n}\r\n\r\nexport default HeaderCartButton;","C:\\AlisRepo\\FoodOrderByMax\\src\\store\\CartStore.js",[],"C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Meals\\AvailableMeals.js",["97"],"import React,{useContext} from 'react'\r\nimport classes from './AvailableMeals.module.css'\r\nimport Card from '../UI/Card'\r\nimport MealItem from './MealItem/MealItem'\r\nimport MealsContext from '../../store/MealsStore'\r\n\r\nconst DUMMY_MEALS = [\r\n    {\r\n        id: 'm1',\r\n        name: 'Sushi',\r\n        description: 'Finest fish and veggies',\r\n        price: 22.99,\r\n    },\r\n    {\r\n        id: 'm2',\r\n        name: 'Schnitzel',\r\n        description: 'A german specialty!',\r\n        price: 16.5,\r\n    },\r\n    {\r\n        id: 'm3',\r\n        name: 'Barbecue Burger',\r\n        description: 'American, raw, meaty',\r\n        price: 12.99,\r\n    },\r\n    {\r\n        id: 'm4',\r\n        name: 'Green Bowl',\r\n        description: 'Healthy...and green...',\r\n        price: 18.99,\r\n    },\r\n];\r\n\r\nconst AvailableMeals = (props) => {\r\n    const ctx =  useContext(MealsContext);\r\n    ;debugger\r\n    const mealsList = ctx.meals.map((currMeal) => {\r\n        return (\r\n            <MealItem\r\n                id={currMeal.id}\r\n                key={currMeal.id}\r\n                name={currMeal.name}\r\n                description={currMeal.description}\r\n                price={currMeal.price}>\r\n            </MealItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <section className={classes.meals}>\r\n            <Card>\r\n                <ul>\r\n                    {mealsList}\r\n                </ul>\r\n            </Card>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AvailableMeals;","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Cart\\CartItem.js",[],"C:\\AlisRepo\\FoodOrderByMax\\src\\components\\UI\\Card.js",[],"C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Meals\\MealItem\\MealItem.js",[],"C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Cart\\CartIcon.js",[],"C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Meals\\MealItem\\MealItemForm.js",["98","99"],"import classes from \"./MealItemForm.module.css\";\r\nimport Input from \"../../UI/Input\";\r\nimport CartContext from '../../../store/CartStore'\r\nimport {useRef,useState,useContext} from 'react'\r\n\r\nconst MealItemForm = (props) => {\r\n\r\n  const amountInputRef = useRef();\r\n  const dummyInputRef =useRef();\r\n  const [formIsValid,setFormIsValid] =useState(true);\r\n \r\n\r\n  //const ctx = useContext(CartContext);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredAmountStr = amountInputRef.current.value;\r\n    const amountNumber = +enteredAmountStr;\r\n    if(enteredAmountStr.trim().length===0 || amountNumber<=0 || amountNumber>5){\r\n      setFormIsValid(false);\r\n      return;\r\n    }else{\r\n      props.addItem({ amount:amountNumber,dummyValue:dummyInputRef.current.value});\r\n    //ctx.addItem({});\r\n  }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.form}>\r\n      <Input ref ={dummyInputRef}\r\n      label=\"Dummy\" \r\n      input={{ id: 'dummy_'+props.id, type: \"text\" ,defaultValue:'a'}}></Input>\r\n      \r\n      <Input ref ={amountInputRef}\r\n      label=\"Amount\" \r\n      input={{ id: 'amount_'+props.id, type: \"number\", min:'1',max:'5' ,step:'1' ,defaultValue:'1'}}></Input>\r\n      <button type =\"submit\">+Add</button>\r\n      {!formIsValid && <p>Please Enter a valid valaue between 1-5</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n","C:\\AlisRepo\\FoodOrderByMax\\src\\components\\UI\\Input.js",[],"C:\\AlisRepo\\FoodOrderByMax\\src\\components\\Layout\\DummyHeaderCartButton.js",["100","101","102","103"],"import React, {useContext,useEffect,useState }from 'react'\r\nimport classes from './DummyHeaderCartButton.module.css'\r\nimport CartIcon, { icon } from '../Cart/CartIcon'\r\nimport CartContext from '../../store/CartStore'\r\nimport MealsContext from '../../store/MealsStore'\r\n\r\nconst DummyHeaderCartButton = (props) => {\r\n\r\n    const[isHighligted,setIsHighligted] = useState(false);\r\n    const [searchFilterValue,setSearchFilterValue] =useState('');\r\n    const ctx =  useContext(MealsContext);  \r\n\r\n    const searchFilterChangeHandler= (event) =>{\r\n      // ;debugger\r\n        if(event !== null && event !== undefined)  {\r\n        event.preventDefault();\r\n            setSearchFilterValue(event.target.value);\r\n            console.log('filter changed..')           \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const identifier = setTimeout(() =>{\r\n          ;debugger\r\n          if(searchFilterValue.length>0){\r\n            ctx.filterMeals(searchFilterValue);\r\n          }\r\n        }, 6000);\r\n    \r\n        return () => {\r\n          console.log('CLEANUP');\r\n          clearTimeout(identifier);\r\n        };\r\n      }, [searchFilterValue]);\r\n   \r\n    \r\n\r\n    const btnClasses = `${classes.button} ${ isHighligted ?classes.bump :'' }`\r\n\r\n    return <button onClick={props.onClick} className={btnClasses}>\r\n        <span className={classes.icon}><CartIcon></CartIcon></span>\r\n        <span><input type=\"text\" value = {searchFilterValue} onChange={searchFilterChangeHandler}></input></span>\r\n        <span className={classes.badge}>{9}</span>\r\n    </button>\r\n\r\n}\r\n\r\nexport default DummyHeaderCartButton;","C:\\AlisRepo\\FoodOrderByMax\\src\\store\\MealsProvider.js",["104"],"import React, { useEffect, useReducer } from \"react\";\r\nimport MealsContext from \"./MealsStore\";\r\n\r\nconst defaultMealsState = {\r\n  meals: [\r\n    {\r\n        id: 'm1',\r\n        name: 'Sushi',\r\n        description: 'Finest fish and veggies',\r\n        price: 22.99,\r\n    },\r\n    {\r\n        id: 'm2',\r\n        name: 'Schnitzel',\r\n        description: 'A german specialty!',\r\n        price: 16.5,\r\n    },\r\n    {\r\n        id: 'm3',\r\n        name: 'Barbecue Burger',\r\n        description: 'American, raw, meaty',\r\n        price: 12.99,\r\n    },\r\n    {\r\n        id: 'm4',\r\n        name: 'Green Bowl',\r\n        description: 'Healthy...and green...',\r\n        price: 18.99,\r\n    },\r\n  ]\r\n};\r\n\r\nconst mealsReducer = (state, action) => {\r\n \r\n    if (action.type === \"FILTER_MEALS\") {\r\n      let filteredMeals = state.meals.filter( meal => meal.name.startsWith(action.payload));\r\n      console.log(filteredMeals);\r\n      return {meals:filteredMeals};\r\n  } else {\r\n        return defaultMealsState;\r\n  }\r\n};\r\n\r\nconst MealsProvider = (props) => {\r\n  // const [currentCartList, setCurrentCartList] = useState([]);\r\n  const [mealsState, dispatchMealAction] = useReducer(\r\n    mealsReducer,\r\n    defaultMealsState\r\n  );\r\n\r\n  /*     const onAddToCartHandler = (item) => {   \r\n        let newList= [...currentCartList,item];\r\n        setCurrentCartList(newList);\r\n        };\r\n       */\r\n  const onFilterHandler = (filterValue) => {\r\n    dispatchMealAction({ type: \"FILTER_MEALS\", payload: filterValue });\r\n  };\r\n\r\n /*  const onRemoveItemHandler = (id) => {\r\n   ;debugger\r\n    dispatchCartAction({ type: \"REMOVE_ITEM\", payload: id });\r\n  };\r\n */\r\n  const mealsContext = {\r\n    meals: mealsState.meals,    \r\n    filterMeals: onFilterHandler  \r\n  };\r\n  console.log('Meal Before Render')\r\n  return (\r\n    <MealsContext.Provider value={mealsContext}>\r\n      {props.children}\r\n    </MealsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MealsProvider;\r\n","C:\\AlisRepo\\FoodOrderByMax\\src\\store\\MealsStore.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":26,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"113","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"114","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"115","line":3,"column":20,"nodeType":"111","messageId":"112","endLine":3,"endColumn":24},{"ruleId":"109","severity":1,"message":"116","line":7,"column":7,"nodeType":"111","messageId":"112","endLine":7,"endColumn":18},{"ruleId":"109","severity":1,"message":"117","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":4,"column":25,"nodeType":"111","messageId":"112","endLine":4,"endColumn":35},{"ruleId":"109","severity":1,"message":"115","line":3,"column":20,"nodeType":"111","messageId":"112","endLine":3,"endColumn":24},{"ruleId":"109","severity":1,"message":"117","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":19},{"ruleId":"109","severity":1,"message":"118","line":9,"column":24,"nodeType":"111","messageId":"112","endLine":9,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":34,"column":10,"nodeType":"121","endLine":34,"endColumn":29,"suggestions":"122"},{"ruleId":"109","severity":1,"message":"113","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Modal' is defined but never used.","'icon' is defined but never used.","'DUMMY_MEALS' is assigned a value but never used.","'CartContext' is defined but never used.","'setIsHighligted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ctx'. Either include it or remove the dependency array.","ArrayExpression",["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [ctx, searchFilterValue]",{"range":"128","text":"129"},[1117,1136],"[ctx, searchFilterValue]"]